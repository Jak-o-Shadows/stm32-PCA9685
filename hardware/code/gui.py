#!/usr/bin/env python
# -*- coding: iso-8859-15 -*-
# generated by wxGlade 0.6.3 on Tue Jul 09 21:28:20 2013

import wx
import conn

# begin wxGlade: extracode
# end wxGlade



class ServoWindow(wx.Frame):
    """
    A gui for setting the position of each servo

    """
    def __init__(self, *args, **kwds):
        # begin wxGlade: ServoWindow.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.sliders = []
        for i in xrange(8):
            self.sliders.append(wx.Slider(self, -1, 90, 0, 180, style=wx.SL_VERTICAL|wx.SL_AUTOTICKS|wx.SL_LABELS|wx.SL_LEFT))
            self.Bind(wx.EVT_COMMAND_SCROLL, self.updateServo, self.sliders[-1])
        #self.slider_0 = wx.Slider(self, -1, 90, 0, 180, style=wx.SL_VERTICAL|wx.SL_AUTOTICKS|wx.SL_LABELS|wx.SL_LEFT)

        self.__set_properties()
        self.__do_layout()
        self.values = [90 for x in xrange(len(self.sliders))]
        
        #from mouseVPython
        self.Bind(wx.EVT_MENU, self.onKeyCombo, id=314)
        accel_tbl = wx.AcceleratorTable([(wx.ACCEL_CTRL,  ord('Q'), 314 )])
        self.SetAcceleratorTable(accel_tbl)
        
        #star the stuff        
        #self.setupConnStuff()
 
    def onKeyCombo(self, event):
        """"""
        print "You pressed CTRL+Q!"
        self.th.q.put("t190")
        self.th.q.put("t3100")
        
        
        

        #self.Bind(wx.EVT_COMMAND_SCROLL, self.updateServo, self.slider_0)
        # end wxGlade
        
    def setupConnStuff(self):
        #self.th = conn.ThreadHelper(conn.SocketProtocol, conn.message)
        self.th = conn.ThreadHelper(conn.SerialProtocol, conn.message)
        self.th.protocol.port = "COM9"
        #self.th = conn.ThreadHelper(conn.BluetoothProtocol, conn.message)
        #self.th.protocol.MAC = "00:13:04:07:07:15"
        self.th.protocol.connect()
        self.th.startThread()
        

    def __set_properties(self):
        # begin wxGlade: ServoWindow.__set_properties
        self.SetTitle("ServoWindow")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: ServoWindow.__do_layout
        horiSizer = wx.BoxSizer(wx.HORIZONTAL)
        vertiSizer = wx.BoxSizer(wx.VERTICAL)
        vertiSizers = []
        for i in xrange(len(self.sliders)):
            vertiSizers.append(wx.BoxSizer(wx.VERTICAL))
            vertiSizers[i].Add(self.sliders[i], 0, 0, 0, 0)
            vertiSizers[i].Add(wx.StaticText(self, -1, str(i), (20, 10)))
            horiSizer.Add(vertiSizers[i])
        #vertiSizer.Add(self.slider_0, 0, 0, 0)
        vertiSizer.Add(horiSizer, 1, wx.EXPAND, 0)
        self.SetSizer(vertiSizer)
        vertiSizer.Fit(self)
        self.Layout()
        # end wxGlade

    def updateServo(self, event): # wxGlade: ServoWindow.<event_handler>
        newValues = [slider.Value for slider in self.sliders]
        for pos in xrange(len(newValues)):
            if newValues[pos] != self.values[pos]:
                sendString = "t" + str(pos) + str(newValues[pos])
                self.th.q.put(sendString)
                #print pos, "updated to", newValues[pos]
        self.values = newValues
        
        event.Skip()

# end of class ServoWindow


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame = ServoWindow(None, -1, "")
    app.SetTopWindow(frame)
    frame.Show()
    app.MainLoop()
